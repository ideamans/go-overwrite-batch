name: CI

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

jobs:
  # Unit tests on multiple platforms
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: ["1.22", "1.23"]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Install dependencies
        run: go mod download

      - name: Run unit tests
        run: go test -v -short -race -coverprofile=./coverage.out ./...
        shell: bash

      - name: Upload coverage
        if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.22'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out

  # Linting (Linux only)
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Run linter
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=5m

  # Test examples (Linux only)
  test-examples:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-examples-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-examples-

      - name: Install dependencies
        run: |
          cd examples/basic
          go mod download

      - name: Build basic example
        run: |
          cd examples/basic
          go build -o basic-example

      - name: Run basic example tests
        run: |
          cd examples/basic
          ./test.sh
